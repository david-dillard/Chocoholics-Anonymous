<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="fall2020team8">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="12"/>
    <property name="source" value="12"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="../../.p2/pool/plugins/org.junit_4.13.0.v20200204-1500.jar"/>
        <pathelement location="../../.p2/pool/plugins/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
    </path>
    <path id="fall2020team8.classpath">
        <pathelement location="bin"/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>
    <path id="run.Interface.classpath">
        <path refid="fall2020team8.classpath"/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>
    <path id="run.TestBillingVerify.classpath">
        <path refid="fall2020team8.classpath"/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>
    <path id="run.TestMember.classpath">
        <path refid="fall2020team8.classpath"/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>
    <path id="run.TestProvider.classpath">
        <path refid="fall2020team8.classpath"/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>
    <path id="run.TestProviderDirectory.classpath">
        <path refid="fall2020team8.classpath"/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>
    <path id="run.TestService.classpath">
        <path refid="fall2020team8.classpath"/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="fall2020team8.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="Interface">
        <java classname="chocAn.Interface" failonerror="true" fork="yes">
            <classpath refid="run.Interface.classpath"/>
        </java>
    </target>  	
    <target name="createJar">
  	    <jar destfile="release/chocAn.jar">
  	    	<fileset dir="bin/" includes="**/*.class"></fileset>
  	    	<manifest>
  	    		<attribute name="Main-Class" value="chocAn.Interface"/>
  	    	</manifest>
  	    </jar>
  	</target>
    <target name="TestBillingVerify">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.TestBillingVerify" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.TestBillingVerify.classpath"/>
        </junit>
    </target>
    <target name="TestMember">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.TestMember" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.TestMember.classpath"/>
        </junit>
    </target>
    <target name="TestProvider">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.TestProvider" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.TestProvider.classpath"/>
        </junit>
    </target>
    <target name="TestProviderDirectory">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.TestProviderDirectory" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.TestProviderDirectory.classpath"/>
        </junit>
    </target>
    <target name="TestService">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="test.TestService" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.TestService.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
